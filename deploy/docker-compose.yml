# ============================================================================
# ShivX Docker Compose - Full Stack
# ============================================================================
# Services: ShivX API, PostgreSQL, Redis, Prometheus, Grafana
# ============================================================================

version: '3.8'

services:
  # ==========================================================================
  # ShivX Application
  # ==========================================================================
  shivx:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: shivx-app
    ports:
      - "8000:8000"
      - "9090:9090"
    environment:
      - SHIVX_ENV=production
      - SHIVX_DATABASE_URL=postgresql://shivx:shivx_password@postgres:5432/shivx
      - SHIVX_REDIS_URL=redis://redis:6379/0
      - SHIVX_OTEL_ENABLED=true
      - SHIVX_OTEL_EXPORTER_ENDPOINT=http://jaeger:4317
    env_file:
      - ../.env
    depends_on:
      - postgres
      - redis
    networks:
      - shivx-network
    restart: unless-stopped
    volumes:
      - shivx-logs:/app/logs
      - shivx-data:/app/data
      - shivx-models:/app/models

  # ==========================================================================
  # PostgreSQL Database
  # ==========================================================================
  postgres:
    image: postgres:15-alpine
    container_name: shivx-postgres
    environment:
      POSTGRES_USER: shivx
      POSTGRES_PASSWORD: shivx_password
      POSTGRES_DB: shivx
    ports:
      - "5432:5432"
    networks:
      - shivx-network
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shivx"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================================================================
  # Redis Cache
  # ==========================================================================
  redis:
    image: redis:7-alpine
    container_name: shivx-redis
    ports:
      - "6379:6379"
    networks:
      - shivx-network
    restart: unless-stopped
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================================================================
  # Prometheus Monitoring
  # ==========================================================================
  prometheus:
    image: prom/prometheus:latest
    container_name: shivx-prometheus
    ports:
      - "9091:9090"
    networks:
      - shivx-network
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  # ==========================================================================
  # Grafana Dashboards
  # ==========================================================================
  grafana:
    image: grafana/grafana:latest
    container_name: shivx-grafana
    ports:
      - "3000:3000"
    networks:
      - shivx-network
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus

  # ==========================================================================
  # Jaeger Tracing
  # ==========================================================================
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: shivx-jaeger
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
    networks:
      - shivx-network
    restart: unless-stopped
    environment:
      - COLLECTOR_OTLP_ENABLED=true

# ==========================================================================
# Networks
# ==========================================================================
networks:
  shivx-network:
    driver: bridge

# ==========================================================================
# Volumes
# ==========================================================================
volumes:
  postgres-data:
  redis-data:
  prometheus-data:
  grafana-data:
  shivx-logs:
  shivx-data:
  shivx-models:
