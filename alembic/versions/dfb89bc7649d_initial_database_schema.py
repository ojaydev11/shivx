"""Initial database schema

Revision ID: dfb89bc7649d
Revises: 
Create Date: 2025-10-28 02:39:33.833795

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dfb89bc7649d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('username', sa.String(length=32), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=False),
    sa.Column('roles', sa.JSON(), nullable=False),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('api_keys',
    sa.Column('key_id', sa.String(length=36), nullable=False),
    sa.Column('key_hash', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=False),
    sa.Column('rate_limit', sa.Integer(), nullable=False),
    sa.Column('requests_count', sa.Integer(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('key_id')
    )
    op.create_index(op.f('ix_api_keys_expires_at'), 'api_keys', ['expires_at'], unique=False)
    op.create_index(op.f('ix_api_keys_is_active'), 'api_keys', ['is_active'], unique=False)
    op.create_index(op.f('ix_api_keys_key_hash'), 'api_keys', ['key_hash'], unique=True)
    op.create_index(op.f('ix_api_keys_user_id'), 'api_keys', ['user_id'], unique=False)
    op.create_table('positions',
    sa.Column('position_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('token', sa.String(length=20), nullable=False),
    sa.Column('size', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.Column('entry_price', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.Column('current_price', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.Column('stop_loss', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('take_profit', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('status', sa.Enum('OPEN', 'CLOSED', 'LIQUIDATED', name='position_status', create_constraint=True), nullable=False),
    sa.Column('opened_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('closed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('strategy', sa.String(length=100), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('position_id')
    )
    op.create_index(op.f('ix_positions_status'), 'positions', ['status'], unique=False)
    op.create_index(op.f('ix_positions_token'), 'positions', ['token'], unique=False)
    op.create_index(op.f('ix_positions_user_id'), 'positions', ['user_id'], unique=False)
    op.create_table('security_audit_logs',
    sa.Column('log_id', sa.String(length=36), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('resource', sa.String(length=255), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('request_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_index('idx_audit_ip_timestamp', 'security_audit_logs', ['ip_address', 'timestamp'], unique=False)
    op.create_index('idx_audit_request_id', 'security_audit_logs', ['request_id'], unique=False)
    op.create_index('idx_audit_success_timestamp', 'security_audit_logs', ['success', 'timestamp'], unique=False)
    op.create_index('idx_audit_timestamp_event_type', 'security_audit_logs', ['timestamp', 'event_type'], unique=False)
    op.create_index('idx_audit_user_timestamp', 'security_audit_logs', ['user_id', 'timestamp'], unique=False)
    op.create_index(op.f('ix_security_audit_logs_event_type'), 'security_audit_logs', ['event_type'], unique=False)
    op.create_index(op.f('ix_security_audit_logs_ip_address'), 'security_audit_logs', ['ip_address'], unique=False)
    op.create_index(op.f('ix_security_audit_logs_request_id'), 'security_audit_logs', ['request_id'], unique=False)
    op.create_index(op.f('ix_security_audit_logs_success'), 'security_audit_logs', ['success'], unique=False)
    op.create_index(op.f('ix_security_audit_logs_timestamp'), 'security_audit_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_security_audit_logs_user_id'), 'security_audit_logs', ['user_id'], unique=False)
    op.create_table('orders',
    sa.Column('order_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('position_id', sa.String(length=36), nullable=True),
    sa.Column('token', sa.String(length=20), nullable=False),
    sa.Column('action', sa.Enum('BUY', 'SELL', name='order_action', create_constraint=True), nullable=False),
    sa.Column('order_type', sa.Enum('MARKET', 'LIMIT', 'STOP_LOSS', 'TAKE_PROFIT', name='order_type', create_constraint=True), nullable=False),
    sa.Column('amount_in', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.Column('amount_out', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.Column('price', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.Column('slippage_bps', sa.Integer(), nullable=False),
    sa.Column('slippage_actual', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'EXECUTED', 'FAILED', 'CANCELLED', name='order_status', create_constraint=True), nullable=False),
    sa.Column('transaction_signature', sa.String(length=255), nullable=True),
    sa.Column('executed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_reason', sa.Text(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['position_id'], ['positions.position_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_index(op.f('ix_orders_position_id'), 'orders', ['position_id'], unique=False)
    op.create_index(op.f('ix_orders_status'), 'orders', ['status'], unique=False)
    op.create_index(op.f('ix_orders_token'), 'orders', ['token'], unique=False)
    op.create_index(op.f('ix_orders_transaction_signature'), 'orders', ['transaction_signature'], unique=True)
    op.create_index(op.f('ix_orders_user_id'), 'orders', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_orders_user_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_transaction_signature'), table_name='orders')
    op.drop_index(op.f('ix_orders_token'), table_name='orders')
    op.drop_index(op.f('ix_orders_status'), table_name='orders')
    op.drop_index(op.f('ix_orders_position_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_security_audit_logs_user_id'), table_name='security_audit_logs')
    op.drop_index(op.f('ix_security_audit_logs_timestamp'), table_name='security_audit_logs')
    op.drop_index(op.f('ix_security_audit_logs_success'), table_name='security_audit_logs')
    op.drop_index(op.f('ix_security_audit_logs_request_id'), table_name='security_audit_logs')
    op.drop_index(op.f('ix_security_audit_logs_ip_address'), table_name='security_audit_logs')
    op.drop_index(op.f('ix_security_audit_logs_event_type'), table_name='security_audit_logs')
    op.drop_index('idx_audit_user_timestamp', table_name='security_audit_logs')
    op.drop_index('idx_audit_timestamp_event_type', table_name='security_audit_logs')
    op.drop_index('idx_audit_success_timestamp', table_name='security_audit_logs')
    op.drop_index('idx_audit_request_id', table_name='security_audit_logs')
    op.drop_index('idx_audit_ip_timestamp', table_name='security_audit_logs')
    op.drop_table('security_audit_logs')
    op.drop_index(op.f('ix_positions_user_id'), table_name='positions')
    op.drop_index(op.f('ix_positions_token'), table_name='positions')
    op.drop_index(op.f('ix_positions_status'), table_name='positions')
    op.drop_table('positions')
    op.drop_index(op.f('ix_api_keys_user_id'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_key_hash'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_is_active'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_expires_at'), table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
